{"version":3,"sources":["panels/Home.js","panels/VueFriends.js","App.js","index.js"],"names":["Home","_ref","id","go","fetchedUser","access_token","react_default","a","createElement","vkui","console","log","title","before","photo_200","src","description","city","concat","first_name","last_name","size","level","onClick","data-to","VueFriends","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","usersInfo","isSpinner","countFriendsInstagram","_this2","offsetFriendsInterval","friendsInterval","setInterval","connect","send","method","params","count","offset","v","then","res","setState","_state$usersInfo","push","apply","toConsumableArray","data","response","items","catch","e","clearInterval","subscribersInterval","getFriends","left","prev","bind","osname","IOS","chevron_back_default","back_default","length","style","margin","map","friend","index","key","React","Component","App","activePanel","currentTarget","dataset","to","app_id","scope","panels_Home","panels_VueFriends","error","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0ebaf628.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, ListItem, Button, Group, Div, Avatar, PanelHeader} from '@vkontakte/vkui';\n\nconst Home = ({id, go, fetchedUser, access_token}) => (\n    <Panel id={id}>\n        {console.log(fetchedUser)}\n        <PanelHeader>VK Tools</PanelHeader>\n        {fetchedUser &&\n        <Group title=\"Ваш аккаунт\">\n            <ListItem\n                before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n            >\n                {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n                {access_token}\n            </ListItem>\n        </Group>}\n\n        <Group title=\"Панель управления\">\n            <Div>\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"friends\">\n                    Друзья в инстаграме\n                </Button>\n            </Div>\n        </Group>\n    </Panel>\n);\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Home;\n","import {\n    Panel,\n    Button,\n    Group,\n    Div,\n    Avatar,\n    PanelHeader,\n    HeaderButton,\n    Cell,\n    IOS,\n    Spinner,\n    Progress\n} from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport {Friends, Users} from '../api';\nimport connect from '@vkontakte/vkui-connect-promise';\n\nclass VueFriends extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            usersInfo: [],\n            isSpinner: true,\n            countFriendsInstagram: 0,\n        };\n    }\n\n    getFriends () {\n        let offsetFriendsInterval = 0;\n        this.friendsInterval = setInterval(() => {\n            connect.send('VKWebAppCallAPIMethod', {\n                    method: 'friends.get',\n                    params: {\n                        count: 100,\n                        offset: offsetFriendsInterval,\n                        access_token: this.props.access_token,\n                        v: '5.95'\n                    }\n                })\n                .then(res => {\n                    console.log(res)\n                    this.setState(state => state.usersInfo.push(...res.data.response.items));\n                    offsetFriendsInterval += 100;\n                })\n                .catch(e => console.log('ERR getFriends', e));\n        }, 2000);\n    }\n\n    prev (e) {\n        clearInterval(this.subscribersInterval);\n        clearInterval(this.friendsInterval);\n        this.props.go(e);\n    }\n\n    componentDidMount () {\n        this.getFriends();\n    }\n\n    render () {\n        return (\n            <Panel id={this.props.id}>\n                <PanelHeader\n                    left={<HeaderButton onClick={this.prev.bind(this)} data-to=\"home\">\n                        {this.osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n                    </HeaderButton>}\n                >\n                    Друзья\n                </PanelHeader>\n                <Group title={`Друзья в инстаграме ${this.state.usersInfo.length}`}>\n                    {this.props.access_token}\n                    {\n                        this.state.isSpinner &&\n                        <Cell size=\"l\">\n                            <Spinner size=\"large\" style={{margin: '150px 0'}}/>\n                        </Cell>\n                    }\n                    {\n                        this.state.usersInfo.map((friend, index) => {\n                            return (\n                                <div key={index}>\n                                    {friend}\n                                </div>\n                            );\n                        })\n                    }\n                </Group>\n            </Panel>\n        );\n    }\n}\n\nVueFriends.propTypes = {\n    go: PropTypes.func.isRequired,\n    access_token: PropTypes.string.isRequired\n};\n\nexport default VueFriends;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect-promise';\nimport {View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport {Users} from './api';\n\nimport Home from './panels/Home';\nimport VueFriends from './panels/VueFriends';\n\nclass App extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            activePanel: 'home',\n            fetchedUser: null,\n            access_token: null\n        };\n    }\n\n    componentDidMount () {\n        connect.send('VKWebAppGetAuthToken', {app_id: 6940370, scope: 'friends,photos,video,pages,status,notes,wall,docs,groups,stats,market'})\n            .then(res => this.setState({access_token: res.data.access_token}))\n            .catch(e => console.log('ERR VKWebAppGetUserInfo', e));\n\n        connect.send(\"VKWebAppGetUserInfo\", {})\n            .then(res => this.setState({fetchedUser: res.data}))\n            .catch(e => console.log('ERR VKWebAppGetUserInfo', e));\n    }\n\n    go = (e) => {\n        this.setState({activePanel: e.currentTarget.dataset.to})\n    };\n\n    render () {\n        return (\n            <View activePanel={this.state.activePanel}>\n                <Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} access_token={this.state.access_token}/>\n                <VueFriends\n                    id=\"friends\"\n                    go={this.go}\n                    access_token={this.state.access_token}\n                />\n            </View>\n        );\n    }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect-promise';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {})\n    .then(res => console.log('VKWebAppInit', res))\n    .catch(e => console.error('ERR VKWebAppInit', e));\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}