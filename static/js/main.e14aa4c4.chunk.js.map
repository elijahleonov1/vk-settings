{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","_ref","id","go","fetchedUser","react_default","a","createElement","vkui","title","before","photo_200","src","description","city","concat","first_name","last_name","size","level","onClick","data-to","osname","platform","Persik","props","left","IOS","chevron_back_default","back_default","className","persik","alt","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","setState","activePanel","currentTarget","dataset","to","state","access_token","_this2","connect","send","app_id","scope","then","res","type","data","console","log","catch","error","detail","panels_Home","src_panels_Persik","React","Component","info","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e14aa4c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, ListItem, Button, Group, Div, Avatar, PanelHeader} from '@vkontakte/vkui';\n\nconst Home = ({id, go, fetchedUser}) => (\n    <Panel id={id}>\n        <PanelHeader>Example</PanelHeader>\n        {fetchedUser &&\n        <Group title=\"User Data Fetched with VK Connect\">\n            <ListItem\n                before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n            >\n                {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n            </ListItem>\n        </Group>}\n\n        <Group title=\"Navigation Example\">\n            <Div>\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n                    Show me the Persik, please\n                </Button>\n            </Div>\n        </Group>\n    </Panel>\n);\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, PanelHeader, HeaderButton, platform, IOS} from '@vkontakte/vkui';\nimport persik from '../img/persik.png';\nimport './Persik.css';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect-promise';\nimport {View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activePanel: 'home',\n            fetchedUser: null,\n            access_token: null\n        };\n    }\n\n    componentDidMount() {\n        connect.send('VKWebAppGetAuthToken', {'app_id': '6940370', 'scope': 'friends,pages,wall,stats'})\n            .then(res => {\n                this.setState({access_token: res.type.data.access_token});\n                console.log(res.type.data.access_token);\n            })\n            .catch(e => console.error('ERR VKWebAppGetAuthToken', e));\n        connect.send('VKWebAppGetUserInfo', {})\n            .then(res => {\n                this.setState({fetchedUser: res.detail.data});\n            })\n            .catch(e => console.error(e.detail.type));\n    }\n\n    go = (e) => {\n        this.setState({activePanel: e.currentTarget.dataset.to})\n    };\n\n    render() {\n        return (\n            <View activePanel={this.state.activePanel}>\n                <Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go}/>\n                <Persik id=\"persik\" go={this.go}/>\n            </View>\n        );\n    }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect-promise';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {})\n    .then(e => console.info('VKWebAppInit ', e))\n    .catch(e => console.error('ERROR VKWebAppInit ', e));\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}