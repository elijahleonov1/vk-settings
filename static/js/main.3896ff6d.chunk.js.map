{"version":3,"sources":["api/index.js","panels/Home.js","panels/VueFriendsForInstagram.js","panels/VueFriendsIsDeleted.js","App.js","index.js"],"names":["Users","opts","connect","send","method","params","Object","objectSpread","v","Friends","Home","_ref","id","go","fetchedUser","access_token","react_default","a","createElement","vkui","console","log","title","before","photo_200","src","description","city","concat","first_name","last_name","size","level","onClick","data-to","VueFriendsForInstagram","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","usersInfo","isSpinner","getFriends","_this2","offsetFriendsInterval","friendsInterval","setInterval","count","offset","then","res","data","response","items","length","getUsersInfo","forEach","item","instagram","setState","push","forceUpdate","catch","e","clearInterval","ids","strFriendsIds","slice","join","user_ids","fields","domen","window","open","_this3","left","prev","bind","osname","IOS","chevron_back_default","back_default","style","margin","map","friend","index","key","status","bottomContent","goInstagram","React","Component","filter","deactivated","photo_200_orig","App","activePanel","currentTarget","dataset","to","subscribe","detail","type","getUser","app_id","scope","panels_Home","panels_VueFriendsForInstagram","VueFriendsIsDeleted","error","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3896ff6d.chunk.js","sourcesContent":["import fetchJsonp from 'fetch-jsonp';\r\nimport connect from '@vkontakte/vkui-connect-promise';\r\n\r\nconst getProfilesUrl = (method, opt) => {\r\n    let urlOpts = '';\r\n    let optKeys = Object.keys(opt);\r\n    optKeys.forEach(item => urlOpts += `${item}=${opt[item]}&`);\r\n    return `https://api.vk.com/method/${method}?${urlOpts}v=5.80`\r\n};\r\n\r\nconst API = (method, opt) => {\r\n    return fetchJsonp(getProfilesUrl(method, opt))\r\n      .then(res => res.json())\r\n      .catch(error => console.error(error));\r\n};\r\nconst Account = {\r\n    getInfo (opts) {\r\n        const method = 'account.getInfo';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nconst Users = {\r\n    getUsers (opts) {\r\n        const method = 'users.get';\r\n        // return API(method, opts);\r\n        return connect.send('VKWebAppCallAPIMethod', {method, params: {...opts, v: '5.95'}});\r\n    },\r\n    getFollowers (opts) {\r\n        const method = 'users.getFollowers';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nconst Friends = {\r\n    getFriends (opts) {\r\n        const method = 'friends.get';\r\n        // return API(method, opts);\r\n        return connect.send('VKWebAppCallAPIMethod', {method, params: {...opts, v: '5.95'}});\r\n    },\r\n    getRequests (opts) {\r\n        const method = 'friends.getRequests';\r\n        return API(method, opts);\r\n    },\r\n    deleteFriends (opts) {\r\n        const method = 'friends.delete';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nconst Likes = {\r\n    getLikePosts (opts) {\r\n        const method = 'fave.getPosts';\r\n        return API(method, opts);\r\n    },\r\n    getLikePhotos (opts) {\r\n        const method = 'fave.getPhotos';\r\n        return API(method, opts);\r\n    },\r\n    deleteLike (opts) {\r\n        const method = 'likes.delete';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nconst Utils = {\r\n    getDateRegistration(id) {\r\n        const url = `https://vk.com/foaf.php?id=${id}`;\r\n        return fetchJsonp(url)\r\n            .then(res => res.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n};\r\n\r\nexport {\r\n    Account,\r\n    Users,\r\n    Friends,\r\n    Likes,\r\n    Utils\r\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, ListItem, Button, Group, Div, Avatar, PanelHeader} from '@vkontakte/vkui';\n\nconst Home = ({id, go, fetchedUser, access_token}) => (\n    <Panel id={id}>\n        {console.log(fetchedUser)}\n        <PanelHeader>VK Tools</PanelHeader>\n        {fetchedUser &&\n        <Group title=\"Ваш аккаунт\">\n            <ListItem\n                before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n            >\n                {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n            </ListItem>\n        </Group>}\n\n        <Group title=\"Панель управления друзьями\">\n            <Div>\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"friendsForInstagram\">\n                    Друзья в инстаграме\n                </Button>\n            </Div>\n            <Div>\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"friendsIsDeleted\">\n                    Удаленные/Забаненые\n                </Button>\n            </Div>\n        </Group>\n        <Group title=\"Установить слежку\">\n            <Div>\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"snooping\">\n                    Следить\n                </Button>\n            </Div>\n        </Group>\n    </Panel>\n);\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Home;\n","import {\n    Panel,\n    Button,\n    Group,\n    Avatar,\n    PanelHeader,\n    HeaderButton,\n    Cell,\n    IOS,\n    Spinner\n} from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport {Friends, Users} from '../api';\n\nclass VueFriendsForInstagram extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            usersInfo: [],\n            isSpinner: true\n        };\n    }\n\n    componentDidMount () {\n        this.getFriends();\n    }\n\n    getFriends () {\n        let countFriendsInterval = 100;\n        let offsetFriendsInterval = 0;\n\n        this.friendsInterval = setInterval(() => {\n\n            Friends.getFriends({\n                count: 100,\n                offset: offsetFriendsInterval,\n                access_token: this.props.access_token,\n            })\n                .then(res => {\n\n                    if(!res.data.response.items.length) {\n                        clearInterval(this.friendsInterval);\n                    } else {\n                        offsetFriendsInterval += countFriendsInterval;\n\n                        this.getUsersInfo(res.data.response.items)\n                            .then(res => {\n                                res.data.response.forEach(item => {\n                                    if (item.instagram) {\n                                        this.setState(state => state.usersInfo.push(item));\n                                    }\n                                });\n                                this.setState({isSpinner: false});\n                                this.forceUpdate();\n                            })\n                            .catch(e => console.log('ERR GET Users', e));\n                    }\n                })\n                .catch(e => console.log('ERR GET Friends', e));\n\n        }, 2000);\n    }\n\n    getUsersInfo (ids) {\n        const strFriendsIds = ids.slice(0, 100).join(',');\n        return Users.getUsers({\n            user_ids: strFriendsIds,\n            fields: 'photo_id, verified, sex, bdate, city, country, home_town, has_photo, photo_50, photo_100, photo_200_orig, photo_200, photo_400_orig, photo_max, photo_max_orig, online, domain, has_mobile, contacts, site, education, universities, schools, status, last_seen, followers_count, common_count, occupation, nickname, relatives, relation, personal, connections, exports, activities, interests, music, movies, tv, books, games, about, quotes, can_post, can_see_all_posts, can_see_audio, can_write_private_message, can_send_friend_request, is_favorite, is_hidden_from_feed, timezone, screen_name, maiden_name, crop_photo, is_friend, friend_status, career, military, blacklisted, blacklisted_by_me',\n            access_token: this.props.access_token\n        });\n    }\n\n    goInstagram (domen) {\n        return window.open(`https://www.instagram.com/${domen}`);\n    }\n\n    prev (e) {\n        clearInterval(this.friendsInterval);\n        this.props.go(e);\n    }\n\n    render () {\n        return (\n            <Panel id={this.props.id}>\n                <PanelHeader\n                    left={<HeaderButton onClick={this.prev.bind(this)} data-to=\"home\">\n                        {this.osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n                    </HeaderButton>}\n                >\n                    Друзья\n                </PanelHeader>\n                <Group title={`Друзья в инстаграме ${this.state.usersInfo.length}`}>\n                    {\n                        this.state.isSpinner &&\n                        <Cell size=\"l\">\n                            <Spinner size=\"large\" style={{margin: '150px 0'}}/>\n                        </Cell>\n                    }\n                    {\n                        this.state.usersInfo &&\n                        this.state.usersInfo.map((friend, index) => {\n                            return (\n                                <div key={index}>\n                                    <Cell\n                                        size=\"l\"\n                                        description={friend.status || ''}\n                                        before={<Avatar src={friend.photo_200}/>}\n                                        bottomContent={\n                                            <Button onClick={\n                                                this.goInstagram.bind(this, friend.instagram)\n                                            }>Instagram</Button>\n                                        }\n                                    >\n                                        {`${friend.first_name} ${friend.last_name}`}\n                                    </Cell>\n                                </div>\n                            );\n                        })\n                    }\n                </Group>\n            </Panel>\n        );\n    }\n}\n\nVueFriendsForInstagram.propTypes = {\n    go: PropTypes.func.isRequired,\n    access_token: PropTypes.string.isRequired\n};\n\nexport default VueFriendsForInstagram;\n","import {\n    Panel,\n    Button,\n    Group,\n    Avatar,\n    PanelHeader,\n    HeaderButton,\n    Cell,\n    IOS,\n    Spinner\n} from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport {Friends, Users} from '../api';\n\nclass VueFriendsForInstagram extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            usersInfo: [],\n            isSpinner: true\n        };\n    }\n\n    componentDidMount () {\n        this.getFriends();\n    }\n\n    getFriends () {\n        let countFriendsInterval = 5000;\n        let offsetFriendsInterval = 0;\n\n        this.friendsInterval = setInterval(() => {\n\n            Friends.getFriends({\n                count: countFriendsInterval,\n                offset: offsetFriendsInterval,\n                fields: 'nickname, domain, sex, bdate, city, country, timezone, photo_50, photo_100, photo_200_orig, has_mobile, contacts, education, online, relation, last_seen, status, can_write_private_message, can_see_all_posts, can_post, universities',\n                access_token: this.props.access_token,\n            })\n                .then(res => {\n\n                    if(!res.data.response.items.length) {\n                        clearInterval(this.friendsInterval);\n                    } else {\n                        offsetFriendsInterval += countFriendsInterval;\n                        const baned = res.data.response.items.filter(item => item.id === 267980128);\ndebugger\n                        res.data.response.items.forEach(item => {\n                            if (item.deactivated === 'deactivated' ||\n                                item.deactivated === 'banned') {\n                                this.setState(state => state.usersInfo.push(item));\n                            }\n                        });\n                        this.setState({isSpinner: false});\n                        this.forceUpdate();\n                    }\n                })\n                .catch(e => console.log('ERR GET Friends', e));\n\n        }, 2000);\n    }\n\n    getUsersInfo (ids) {\n        const strFriendsIds = ids.slice(0, 100).join(',');\n        return Users.getUsers({\n            user_ids: strFriendsIds,\n            fields: 'photo_id, verified, sex, bdate, city, country, home_town, has_photo, photo_50, photo_100, photo_200_orig, photo_200, photo_400_orig, photo_max, photo_max_orig, online, domain, has_mobile, contacts, site, education, universities, schools, status, last_seen, followers_count, common_count, occupation, nickname, relatives, relation, personal, connections, exports, activities, interests, music, movies, tv, books, games, about, quotes, can_post, can_see_all_posts, can_see_audio, can_write_private_message, can_send_friend_request, is_favorite, is_hidden_from_feed, timezone, screen_name, maiden_name, crop_photo, is_friend, friend_status, career, military, blacklisted, blacklisted_by_me',\n            access_token: this.props.access_token\n        });\n    }\n\n    goInstagram (domen) {\n        return window.open(`https://www.instagram.com/${domen}`);\n    }\n\n    prev (e) {\n        clearInterval(this.friendsInterval);\n        this.props.go(e);\n    }\n\n    render () {\n        return (\n            <Panel id={this.props.id}>\n                <PanelHeader\n                    left={<HeaderButton onClick={this.prev.bind(this)} data-to=\"home\">\n                        {this.osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n                    </HeaderButton>}\n                >\n                    Друзья\n                </PanelHeader>\n                <Group title={`Друзья в инстаграме ${this.state.usersInfo.length}`}>\n                    {\n                        this.state.isSpinner &&\n                        <Cell size=\"l\">\n                            <Spinner size=\"large\" style={{margin: '150px 0'}}/>\n                        </Cell>\n                    }\n                    {\n                        this.state.usersInfo &&\n                        this.state.usersInfo.map((friend, index) => {\n                            return (\n                                <div key={index}>\n                                    <Cell\n                                        size=\"l\"\n                                        description={friend.status || ''}\n                                        before={<Avatar src={friend.photo_200 || friend.photo_200_orig}/>}\n                                        bottomContent={'asdasd'}\n                                    >\n                                        {`${friend.first_name} ${friend.last_name}`}\n                                    </Cell>\n                                </div>\n                            );\n                        })\n                    }\n                </Group>\n            </Panel>\n        );\n    }\n}\n\nVueFriendsForInstagram.propTypes = {\n    go: PropTypes.func.isRequired,\n    access_token: PropTypes.string.isRequired\n};\n\nexport default VueFriendsForInstagram;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport {View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport {Users} from './api';\n\nimport Home from './panels/Home';\nimport VueFriendsForInstagram from './panels/VueFriendsForInstagram';\nimport VueFriendsIsDeleted from './panels/VueFriendsIsDeleted';\n\nclass App extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            activePanel: 'home',\n            fetchedUser: null,\n            access_token: null\n        };\n    }\n\n    componentDidMount () {\n        connect.subscribe((e) => {\n            switch (e.detail.type) {\n                case 'VKWebAppAccessTokenReceived':\n                    this.setState({ access_token : e.detail.data.access_token });\n                    console.log('access_token', e.detail.data.access_token);\n                    this.getUser();\n                    break;\n                default:\n                    console.log(e.detail);\n            }\n        });\n        connect.send(\"VKWebAppGetAuthToken\", {\"app_id\": 6940370, \"scope\": \"friends,status,wall,groups\"});\n    }\n\n    getUser() {\n        Users.getUsers({\n            fields: 'photo_200,city,title',\n            access_token: this.state.access_token\n        })\n            .then(res => this.setState({ fetchedUser : res.data.response[0]}))\n            .catch(e => console.log('ERR GET User', e));\n    }\n\n    go = (e) => {\n        this.setState({activePanel: e.currentTarget.dataset.to})\n    };\n\n    render () {\n        return (\n            <View activePanel={this.state.activePanel}>\n                <Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} access_token={this.state.access_token}/>\n                <VueFriendsForInstagram\n                    id=\"friendsForInstagram\"\n                    go={this.go}\n                    access_token={this.state.access_token}\n                />\n                <VueFriendsIsDeleted\n                    id=\"friendsIsDeleted\"\n                    go={this.go}\n                    access_token={this.state.access_token}\n                />\n            </View>\n        );\n    }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect-promise';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {})\n    .then(res => console.log('VKWebAppInit', res))\n    .catch(e => console.error('ERR VKWebAppInit', e));\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}