{"version":3,"sources":["api/index.js","panels/Home.js","panels/VueFriends.js","App.js","index.js"],"names":["API","method","opt","fetchJsonp","urlOpts","Object","keys","forEach","item","concat","getProfilesUrl","then","res","json","catch","error","console","Users","opts","Friends","Home","_ref","id","go","fetchedUser","react_default","a","createElement","vkui","log","title","before","photo_200","src","description","city","first_name","last_name","size","level","onClick","data-to","VueFriends","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","usersInfo","countFriendsInstagram","_this2","offsetFriendsInterval","friendsInterval","setInterval","count","offset","access_token","data","getUsersInfo","response","items","length","setState","instagram","push","forceUpdate","clearInterval","e","ids","strFriendsIds","slice","join","user_ids","fields","window","open","subscribersInterval","getFriends","_this3","left","prev","bind","osname","IOS","chevron_back_default","back_default","style","margin","map","friend","index","key","status","photo_200_orig","bottomContent","goInstagram","React","Component","App","activePanel","currentTarget","dataset","to","connect","send","app_id","scope","info","getUser","panels_Home","panels_VueFriends","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b2f89226.chunk.js","sourcesContent":["import fetchJsonp from 'fetch-jsonp';\r\n\r\nconst getProfilesUrl = (method, opt) => {\r\n    let urlOpts = '';\r\n    let optKeys = Object.keys(opt);\r\n    optKeys.forEach(item => urlOpts += `${item}=${opt[item]}&`);\r\n    return `https://api.vk.com/method/${method}?${urlOpts}v=5.80`\r\n};\r\n\r\nconst API = (method, opt) => {\r\n    return fetchJsonp(getProfilesUrl(method, opt))\r\n      .then(res => res.json())\r\n      .catch(error => console.error(error));\r\n};\r\nconst Account = {\r\n    getInfo (opts) {\r\n        const method = 'account.getInfo';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nconst Users = {\r\n    getUsers (opts) {\r\n        const method = 'users.get';\r\n        return API(method, opts);\r\n    },\r\n    getFollowers (opts) {\r\n        const method = 'users.getFollowers';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nconst Friends = {\r\n    getFriends (opts) {\r\n        const method = 'friends.get';\r\n        return API(method, opts);\r\n    },\r\n    getRequests (opts) {\r\n        const method = 'friends.getRequests';\r\n        return API(method, opts);\r\n    },\r\n    deleteFriends (opts) {\r\n        const method = 'friends.delete';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nconst Likes = {\r\n    getLikePosts (opts) {\r\n        const method = 'fave.getPosts';\r\n        return API(method, opts);\r\n    },\r\n    getLikePhotos (opts) {\r\n        const method = 'fave.getPhotos';\r\n        return API(method, opts);\r\n    },\r\n    deleteLike (opts) {\r\n        const method = 'likes.delete';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nexport {\r\n    Account,\r\n    Users,\r\n    Friends,\r\n    Likes\r\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, ListItem, Button, Group, Div, Avatar, PanelHeader} from '@vkontakte/vkui';\n\nconst Home = ({id, go, fetchedUser}) => (\n    <Panel id={id}>\n        {console.log(fetchedUser)}\n        <PanelHeader>Example</PanelHeader>\n        {fetchedUser &&\n        <Group title=\"Ваш аккаунт\">\n            <ListItem\n                before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n            >\n                {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n            </ListItem>\n        </Group>}\n\n        <Group title=\"Панель управления\">\n            <Div>\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"friends\">\n                    Друзья в инстаграме\n                </Button>\n            </Div>\n        </Group>\n    </Panel>\n);\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Home;\n","import {\n    Panel,\n    Button,\n    Group,\n    Div,\n    Avatar,\n    PanelHeader,\n    HeaderButton,\n    Cell,\n    IOS,\n    Spinner,\n    Progress\n} from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport {Friends, Users} from '../api';\n\nclass VueFriends extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            usersInfo: [],\n            countFriendsInstagram: 0\n        };\n    }\n\n    getFriends () {\n        let offsetFriendsInterval = 0;\n        this.friendsInterval = setInterval(() => {\n            Friends.getFriends({\n                count: 100,\n                offset: offsetFriendsInterval,\n                access_token: this.props.access_token\n            })\n                .then(data => {\n                    offsetFriendsInterval += 100;\n                    this.getUsersInfo(data.response.items)\n                        .then(res => {\n                            if (res.error) {\n                                console.error('Ошибка', res.error);\n                            } else if (!res.response.length) {\n                                clearInterval(this.friendsInterval);\n                                this.setState(state => state.usersInfo.push({}));\n                            } else {\n                                this.setState((state) => {\n                                    res.response.forEach(item => {\n                                        if(item.instagram) state.usersInfo.push(item);\n                                    });\n                                });\n                                this.forceUpdate();\n                            }\n                        })\n                        .catch(e => console.error(e));\n                })\n                .catch(e => console.error(e));\n        }, 2000);\n    }\n\n    getUsersInfo (ids) {\n        const strFriendsIds = ids.slice(0, 100).join(',');\n        return Users.getUsers({\n            user_ids: strFriendsIds,\n            fields: 'photo_id,verified,sex,bdate,city,country,home_town,has_photo,photo_50,photo_100,photo_200_orig,photo_200,photo_400_orig,photo_max,photo_max_orig,online,domain, has_mobile, contacts, site, education, universities, schools, status, last_seen, followers_count, common_count, occupation, nickname, relatives, relation, personal, connections, exports, activities, interests, music, movies, tv, books, games, about, quotes, can_post, can_see_all_posts, can_see_audio, can_write_private_message, can_send_friend_request, is_favorite, is_hidden_from_feed, timezone, screen_name, maiden_name, crop_photo, is_friend, friend_status, career, military, blacklisted, blacklisted_by_me',\n            access_token: this.props.access_token\n        });\n    }\n\n    goInstagram (id) {\n        return window.open(`https://www.instagram.com/${id}`);\n    }\n\n    prev (e) {\n        clearInterval(this.subscribersInterval);\n        clearInterval(this.friendsInterval);\n        this.props.go(e);\n    }\n\n    componentDidMount () {\n        this.getFriends();\n    }\n\n    render () {\n        return (\n            <Panel id={this.props.id}>\n                <PanelHeader\n                    left={<HeaderButton onClick={this.prev.bind(this)} data-to=\"home\">\n                        {this.osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n                    </HeaderButton>}\n                >\n                    Друзья\n                </PanelHeader>\n                <Group title={`Друзья в инстаграме ${this.state.usersInfo.length}`}>\n                    {\n                        !this.state.usersInfo.length &&\n                        <Cell size=\"l\">\n                            <Spinner size=\"large\" style={{margin: '150px 0'}}/>\n                        </Cell>\n                    }\n                    {\n                        this.state.usersInfo.map((friend, index) => {\n                            return (\n                                <div key={index}>\n                                    {\n                                        friend.instagram &&\n                                        <Cell\n                                            size=\"l\"\n                                            description={friend.status || ''}\n                                            before={<Avatar src={friend.photo_200_orig}/>}\n                                            bottomContent={\n                                                <Button onClick={\n                                                    this.goInstagram.bind(this, friend.instagram)\n                                                }>Instagram</Button>\n                                            }\n                                        >\n                                            {`${friend.first_name} ${friend.last_name}`}\n                                        </Cell>\n                                    }\n                                </div>\n                            );\n                        })\n                    }\n                </Group>\n            </Panel>\n        );\n    }\n}\n\nVueFriends.propTypes = {\n    go: PropTypes.func.isRequired,\n    access_token: PropTypes.string.isRequired\n};\n\nexport default VueFriends;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect-promise';\nimport {View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport {Users} from './api';\n\nimport Home from './panels/Home';\nimport VueFriends from './panels/VueFriends';\n\nclass App extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            activePanel: 'home',\n            fetchedUser: null,\n            access_token: 'dee7d0f83d898c7a2cfcc7cf2c1f5ef6c73c746770340624be59d16f330a29310e50fc9730148a11df137'\n        };\n    }\n\n    componentDidMount () {\n        connect.send('VKWebAppGetAuthToken', {app_id: 6940370, scope: 'friends,photos,video,pages,status,notes,wall,docs,groups,stats,market'})\n            .then(res => {\n                this.setState({access_token: res.data.access_token});\n                console.info('access_token', res);\n                this.getUser();\n            })\n            .catch(e => console.error('ERR VKWebAppGetUserInfo', e));\n    }\n\n    getUser () {\n        Users.getUsers({\n            fields: 'photo_id, verified, sex, bdate, city, country, home_town, has_photo, photo_50, photo_100, photo_200_orig, photo_200, photo_400_orig, photo_max, photo_max_orig, online, domain, has_mobile, contacts, site, education, universities, schools, status, last_seen, followers_count, common_count, occupation, nickname, relatives, relation, personal, connections, exports, activities, interests, music, movies, tv, books, games, about, quotes, can_post, can_see_all_posts, can_see_audio, can_write_private_message, can_send_friend_request, is_favorite, is_hidden_from_feed, timezone, screen_name, maiden_name, crop_photo, is_friend, friend_status, career, military, blacklisted, blacklisted_by_me',\n            access_token: this.state.access_token\n        })\n            .then(data => this.setState({fetchedUser: data.response[0]}))\n            .catch(e => console.error(e));\n    }\n\n    go = (e) => {\n        this.setState({activePanel: e.currentTarget.dataset.to})\n    };\n\n    render () {\n        return (\n            <View activePanel={this.state.activePanel}>\n                <Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go}/>\n                <VueFriends\n                    id=\"friends\"\n                    go={this.go}\n                    access_token={this.state.access_token}\n                />\n            </View>\n        );\n    }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect-promise';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {})\n    .then(res => console.log('VKWebAppInit', res))\n    .catch(e => console.error('ERR VKWebAppInit', e));\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}