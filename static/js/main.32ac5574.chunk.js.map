{"version":3,"sources":["panels/Home.js","panels/VueFriends.js","App.js","index.js"],"names":["Home","_ref","id","go","fetchedUser","react_default","a","createElement","vkui","console","log","title","before","photo_200","src","description","city","concat","first_name","last_name","size","level","onClick","data-to","VueFriends","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","usersInfo","isSpinner","countFriendsInstagram","_this2","offsetFriendsInterval","friendsInterval","setInterval","connect","send","method","params","count","offset","access_token","v","then","res","data","error","clearInterval","setState","getUsersInfo","response","items","length","_state$usersInfo","push","apply","toConsumableArray","forceUpdate","catch","e","ids","strFriendsIds","slice","join","user_ids","fields","window","open","subscribersInterval","getFriends","_this3","left","prev","bind","osname","IOS","chevron_back_default","back_default","style","margin","map","friend","index","key","instagram","status","photo_200_orig","bottomContent","goInstagram","React","Component","App","activePanel","currentTarget","dataset","to","app_id","scope","panels_Home","panels_VueFriends","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.32ac5574.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, ListItem, Button, Group, Div, Avatar, PanelHeader} from '@vkontakte/vkui';\n\nconst Home = ({id, go, fetchedUser}) => (\n    <Panel id={id}>\n        {console.log(fetchedUser)}\n        <PanelHeader>VK Tools</PanelHeader>\n        {fetchedUser &&\n        <Group title=\"Ваш аккаунт\">\n            <ListItem\n                before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n            >\n                {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n            </ListItem>\n        </Group>}\n\n        <Group title=\"Панель управления\">\n            <Div>\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"friends\">\n                    Друзья в инстаграме\n                </Button>\n            </Div>\n        </Group>\n    </Panel>\n);\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Home;\n","import {\n    Panel,\n    Button,\n    Group,\n    Div,\n    Avatar,\n    PanelHeader,\n    HeaderButton,\n    Cell,\n    IOS,\n    Spinner,\n    Progress\n} from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport {Friends, Users} from '../api';\nimport connect from '@vkontakte/vkui-connect-promise';\n\nclass VueFriends extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            usersInfo: [],\n            isSpinner: true,\n            countFriendsInstagram: 0\n        };\n    }\n\n    getFriends () {\n        let offsetFriendsInterval = 0;\n        this.friendsInterval = setInterval(() => {\n            connect.send('VKWebAppCallAPIMethod', {\n                    method: 'friends.get',\n                    params: {\n                        count: 100,\n                        offset: offsetFriendsInterval,\n                        access_token: this.props.access_token,\n                        v: '5.95'\n                    }\n                })\n                .then(res => {\n                    console.log(res)\n                    offsetFriendsInterval += 100;\n                    if (res.data.error) {\n                        clearInterval(this.friendsInterval);\n                        this.setState({isSpinner: false});\n                    } else {\n                        this.getUsersInfo(res.data.response.items)\n                            .then(res => {\n                                this.setState({isSpinner: false});\n                                if (res.error) {\n                                    console.error('Ошибка', res.error);\n                                } else if (!res.data.response.length) {\n                                    clearInterval(this.friendsInterval);\n                                } else {\n                                    this.setState(state => state.usersInfo.push(...res.data.response));\n                                    this.forceUpdate();\n                                }\n                            })\n                            .catch(e => console.log('ERR getUsersInfo', e));\n                    }\n                })\n                .catch(e => console.log('ERR getFriends', e));\n        }, 2000);\n    }\n\n    getUsersInfo (ids) {\n        const strFriendsIds = ids.slice(0, 100).join(',');\n        return connect.send('VKWebAppCallAPIMethod', {\n            method: 'users.get',\n            params: {\n                user_ids: strFriendsIds,\n                fields: 'photo_200, contacts, site, education, universities, status, common_count, occupation, nickname, relatives, relation, personal, connections',\n                access_token: this.props.access_token,\n                v: '5.95'\n            }\n        });\n    }\n\n    goInstagram (id) {\n        return window.open(`https://www.instagram.com/${id}`);\n    }\n\n    prev (e) {\n        clearInterval(this.subscribersInterval);\n        clearInterval(this.friendsInterval);\n        this.props.go(e);\n    }\n\n    componentDidMount () {\n        this.getFriends();\n    }\n\n    render () {\n        return (\n            <Panel id={this.props.id}>\n                <PanelHeader\n                    left={<HeaderButton onClick={this.prev.bind(this)} data-to=\"home\">\n                        {this.osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n                    </HeaderButton>}\n                >\n                    Друзья\n                </PanelHeader>\n                <Group title={`Друзья в инстаграме ${this.state.usersInfo.length}`}>\n                    {\n                        this.state.isSpinner &&\n                        <Cell size=\"l\">\n                            <Spinner size=\"large\" style={{margin: '150px 0'}}/>\n                        </Cell>\n                    }\n                    {\n                        this.state.usersInfo.map((friend, index) => {\n                            return (\n                                <div key={index}>\n                                    {\n                                        friend.instagram &&\n                                        <Cell\n                                            size=\"l\"\n                                            description={friend.status || ''}\n                                            before={<Avatar src={friend.photo_200_orig}/>}\n                                            bottomContent={\n                                                <Button onClick={\n                                                    this.goInstagram.bind(this, friend.instagram)\n                                                }>Instagram</Button>\n                                            }\n                                        >\n                                            {`${friend.first_name} ${friend.last_name}`}\n                                        </Cell>\n                                    }\n                                </div>\n                            );\n                        })\n                    }\n                </Group>\n            </Panel>\n        );\n    }\n}\n\nVueFriends.propTypes = {\n    go: PropTypes.func.isRequired,\n    access_token: PropTypes.string.isRequired\n};\n\nexport default VueFriends;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect-promise';\nimport {View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport {Users} from './api';\n\nimport Home from './panels/Home';\nimport VueFriends from './panels/VueFriends';\n\nclass App extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            activePanel: 'home',\n            fetchedUser: null,\n            access_token: null\n        };\n    }\n\n    componentDidMount () {\n        connect.send('VKWebAppGetAuthToken', {app_id: 6940370, scope: 'friends,photos,video,pages,status,notes,wall,docs,groups,stats,market'})\n            .then(res => this.setState({access_token: res.data.access_token}))\n            .catch(e => console.error('ERR VKWebAppGetUserInfo', e));\n\n        connect.send(\"VKWebAppGetUserInfo\", {})\n            .then(res => this.setState({fetchedUser: res.data}))\n            .catch(e => console.error('ERR VKWebAppGetUserInfo', e));\n    }\n\n    go = (e) => {\n        this.setState({activePanel: e.currentTarget.dataset.to})\n    };\n\n    render () {\n        return (\n            <View activePanel={this.state.activePanel}>\n                <Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go}/>\n                <VueFriends\n                    id=\"friends\"\n                    go={this.go}\n                    access_token={this.state.access_token}\n                />\n            </View>\n        );\n    }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect-promise';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {})\n    .then(res => console.log('VKWebAppInit', res))\n    .catch(e => console.error('ERR VKWebAppInit', e));\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}