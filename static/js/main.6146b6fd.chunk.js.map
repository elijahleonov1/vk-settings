{"version":3,"sources":["panels/Home.js","api/index.js","panels/VueFriends.js","App.js","index.js"],"names":["Home","_ref","id","go","fetchedUser","react_default","a","createElement","vkui","title","before","photo_200","src","description","city","concat","first_name","last_name","size","level","onClick","data-to","API","method","opt","fetchJsonp","urlOpts","Object","keys","forEach","item","getProfilesUrl","then","res","json","catch","error","console","Users","opts","Friends","VueFriends","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","progress","countFriends","isDelAllFriends","usersInfo","isPreloader","countFriendsInstagram","_this2","offsetFriendsInterval","isClearInterval","friendsInterval","setInterval","clearInterval","count","offset","access_token","data","setState","response","getUsersInfo","items","length","instagram","push","forceUpdate","e","ids","strFriendsIds","slice","join","user_ids","fields","window","open","subscribersInterval","getFriends","_this3","left","prev","bind","osname","IOS","chevron_back_default","back_default","style","margin","map","friend","index","status","photo_200_orig","bottomContent","goInstagram","key","React","Component","App","activePanel","currentTarget","dataset","to","connect","send","app_id","scope","info","panels_Home","panels_VueFriends","log","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6146b6fd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, ListItem, Button, Group, Div, Avatar, PanelHeader} from '@vkontakte/vkui';\n\nconst Home = ({id, go, fetchedUser}) => (\n    <Panel id={id}>\n        <PanelHeader>Example</PanelHeader>\n        {fetchedUser &&\n        <Group title=\"User Data Fetched with VK Connect\">\n            <ListItem\n                before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n            >\n                {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n            </ListItem>\n        </Group>}\n\n        <Group title=\"Панель управления\">\n            <Div>\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"friends\">\n                    Друзья в инстаграме\n                </Button>\n            </Div>\n        </Group>\n    </Panel>\n);\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Home;\n","import fetchJsonp from 'fetch-jsonp';\r\n\r\nconst getProfilesUrl = (method, opt) => {\r\n    let urlOpts = '';\r\n    let optKeys = Object.keys(opt);\r\n    optKeys.forEach(item => urlOpts += `${item}=${opt[item]}&`);\r\n    return `https://api.vk.com/method/${method}?${urlOpts}v=5.80`\r\n};\r\n\r\nconst API = (method, opt) => {\r\n    return fetchJsonp(getProfilesUrl(method, opt))\r\n      .then(res => res.json())\r\n      .catch(error => console.error(error));\r\n};\r\nconst Account = {\r\n    getInfo (opts) {\r\n        const method = 'account.getInfo';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nconst Users = {\r\n    getUsers (opts) {\r\n        const method = 'users.get';\r\n        return API(method, opts);\r\n    },\r\n    getFollowers (opts) {\r\n        const method = 'users.getFollowers';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nconst Friends = {\r\n    getFriends (opts) {\r\n        const method = 'friends.get';\r\n        return API(method, opts);\r\n    },\r\n    getRequests (opts) {\r\n        const method = 'friends.getRequests';\r\n        return API(method, opts);\r\n    },\r\n    deleteFriends (opts) {\r\n        const method = 'friends.delete';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nconst Likes = {\r\n    getLikePosts (opts) {\r\n        const method = 'fave.getPosts';\r\n        return API(method, opts);\r\n    },\r\n    getLikePhotos (opts) {\r\n        const method = 'fave.getPhotos';\r\n        return API(method, opts);\r\n    },\r\n    deleteLike (opts) {\r\n        const method = 'likes.delete';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nexport {\r\n    Account,\r\n    Users,\r\n    Friends,\r\n    Likes\r\n};","import {\n    Panel,\n    Button,\n    Group,\n    Div,\n    Avatar,\n    PanelHeader,\n    HeaderButton,\n    Cell,\n    IOS,\n    Spinner,\n    Progress\n} from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport {Friends, Users} from '../api';\n\nclass VueFriends extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            progress: 0,\n            countFriends: 0,\n            isDelAllFriends: false,\n            usersInfo: [],\n            isPreloader: true,\n            countFriendsInstagram: 0\n        };\n    }\n\n    getFriends () {\n        let offsetFriendsInterval = 0;\n        let isClearInterval = false;\n        this.friendsInterval = setInterval(() => {\n            if (isClearInterval) clearInterval(this.friendsInterval);\n\n            Friends.getFriends({\n                count: 100,\n                offset: offsetFriendsInterval,\n                access_token: this.props.access_token\n            })\n                .then(data => {\n                    offsetFriendsInterval += 100;\n                    this.setState({countFriends: data.response.count});\n                    this.getUsersInfo(data.response.items)\n                        .then(data => {\n                            if (data.error) {\n                                console.error('Ошибка', data.error);\n                            } else {\n                                isClearInterval = !data.response.length;\n                                this.setState((state) => {\n                                    data.response.forEach(item => {\n                                        if(item.instagram) {\n                                            state.usersInfo.push(item);\n                                        }\n                                    });\n                                    state.countFriends = data.count;\n                                    state.isPreloader = false;\n                                });\n                                this.forceUpdate();\n                            }\n                        })\n                        .catch(e => console.error(e));\n                })\n                .catch(e => console.error(e));\n        }, 2000);\n    }\n\n    getUsersInfo (ids) {\n        const strFriendsIds = ids.slice(0, 100).join(',');\n        return Users.getUsers({\n            user_ids: strFriendsIds,\n            fields: 'photo_id, verified, sex, bdate, city, country, home_town, has_photo, photo_50, photo_100, photo_200_orig, photo_200, photo_400_orig, photo_max, photo_max_orig, online, domain, has_mobile, contacts, site, education, universities, schools, status, last_seen, followers_count, common_count, occupation, nickname, relatives, relation, personal, connections, exports, activities, interests, music, movies, tv, books, games, about, quotes, can_post, can_see_all_posts, can_see_audio, can_write_private_message, can_send_friend_request, is_favorite, is_hidden_from_feed, timezone, screen_name, maiden_name, crop_photo, is_friend, friend_status, career, military, blacklisted, blacklisted_by_me',\n            access_token: this.props.access_token\n        });\n    }\n\n    goInstagram (id) {\n        return window.open(`https://www.instagram.com/${id}`);\n    }\n\n    prev (e) {\n        clearInterval(this.subscribersInterval);\n        clearInterval(this.friendsInterval);\n        this.props.go(e);\n    }\n\n    componentDidMount () {\n        this.getFriends();\n    }\n\n    render () {\n        return (\n            <Panel id={this.props.id}>\n                <PanelHeader\n                    left={<HeaderButton onClick={this.prev.bind(this)} data-to=\"home\">\n                        {this.osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n                    </HeaderButton>}\n                >\n                    Друзья\n                </PanelHeader>\n                <Group title={`Друзья в инстаграме ${this.state.usersInfo.length}`}>\n                    {\n                        this.state.isPreloader &&\n                        <Cell size=\"l\">\n                            <Spinner size=\"large\" style={{margin: '150px 0'}}/>\n                        </Cell>\n                    }\n                    {\n                        this.state.usersInfo.map((friend, index) => {\n                            return (\n                                <div>\n                                    {\n                                        friend.instagram &&\n                                        <Cell\n                                            size=\"l\"\n                                            description={friend.status || ''}\n                                            before={<Avatar src={friend.photo_200_orig}/>}\n                                            bottomContent={\n                                                <Button onClick={this.goInstagram.bind(this, friend.instagram)}>Instagram</Button>\n                                            }\n                                            key={index}\n                                        >\n                                            {`${friend.first_name} ${friend.last_name}`}\n                                        </Cell>\n                                    }\n                                </div>\n                            );\n                        })\n                    }\n                </Group>\n            </Panel>\n        );\n    }\n}\n\nVueFriends.propTypes = {\n    go: PropTypes.func.isRequired,\n    access_token: PropTypes.string.isRequired\n};\n\nexport default VueFriends;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect-promise';\nimport {View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport VueFriends from './panels/VueFriends';\n\n//b0b709306e4ffafc8dfd849d21a558a0dea34f30d5e6068e5cdb1c09c10a86a326e558c84fa056bda3fb5\n\nclass App extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            activePanel: 'home',\n            fetchedUser: null,\n            access_token: 'b0b709306e4ffafc8dfd849d21a558a0dea34f30d5e6068e5cdb1c09c10a86a326e558c84fa056bda3fb5'\n        };\n    }\n\n    componentDidMount () {\n        connect.send('VKWebAppGetAuthToken', {app_id: 6940370, scope: 'friends,photos,video,pages,status,notes,wall,docs,groups,stats,market'})\n            .then(res => {\n                this.setState({access_token: res.data.access_token});\n                console.info('access_token', res);\n            })\n            .catch(e => console.error('ERR VKWebAppGetUserInfo', e));\n        connect.send('VKWebAppGetUserInfo', {})\n            .then(res => this.setState({fetchedUser: res.data}))\n            .catch(e => console.error('ERR VKWebAppGetUserInfo', e));\n    }\n\n    go = (e) => {\n        this.setState({activePanel: e.currentTarget.dataset.to})\n    };\n\n    render () {\n        return (\n            <View activePanel={this.state.activePanel}>\n                <Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go}/>\n                <VueFriends\n                    id=\"friends\"\n                    go={this.go}\n                    access_token={this.state.access_token}\n                />\n            </View>\n        );\n    }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect-promise';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {})\n    .then(res => console.log('VKWebAppInit', res))\n    .catch(e => console.error('ERR VKWebAppInit', e));\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}