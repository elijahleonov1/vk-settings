{"version":3,"sources":["api/index.js","panels/Home.js","panels/VueFriends.js","App.js","index.js"],"names":["Users","opts","connect","send","method","params","Object","objectSpread","v","Friends","Home","_ref","id","go","fetchedUser","react_default","a","createElement","vkui","console","log","title","before","photo_200","src","description","city","concat","first_name","last_name","size","level","onClick","data-to","VueFriends","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","usersInfo","isSpinner","countFriendsInstagram","_this2","offsetFriendsInterval","friendsInterval","setInterval","count","offset","access_token","then","data","error","clearInterval","setState","getUsersInfo","response","items","res","length","forEach","item","instagram","push","forceUpdate","catch","e","ids","strFriendsIds","slice","join","user_ids","fields","window","open","subscribersInterval","getFriends","_this3","left","prev","bind","osname","IOS","chevron_back_default","back_default","style","margin","map","friend","index","key","status","photo_200_orig","bottomContent","goInstagram","React","Component","App","activePanel","currentTarget","dataset","to","app_id","scope","info","getUser","panels_Home","panels_VueFriends","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.55dacc1a.chunk.js","sourcesContent":["import fetchJsonp from 'fetch-jsonp';\r\nimport connect from '@vkontakte/vkui-connect-promise';\r\n\r\nconst getProfilesUrl = (method, opt) => {\r\n    let urlOpts = '';\r\n    let optKeys = Object.keys(opt);\r\n    optKeys.forEach(item => urlOpts += `${item}=${opt[item]}&`);\r\n    return `https://api.vk.com/method/${method}?${urlOpts}v=5.80`\r\n};\r\n\r\nconst API = (method, opt) => {\r\n    return fetchJsonp(getProfilesUrl(method, opt))\r\n      .then(res => res.json())\r\n      .catch(error => console.error(error));\r\n};\r\nconst Account = {\r\n    getInfo (opts) {\r\n        const method = 'account.getInfo';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nconst Users = {\r\n    getUsers (opts) {\r\n        const method = 'users.get';\r\n        // return API(method, opts);\r\n        return connect.send('VKWebAppCallAPIMethod', {method, params: {...opts, v: '5.95'}});\r\n    },\r\n    getFollowers (opts) {\r\n        const method = 'users.getFollowers';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nconst Friends = {\r\n    getFriends (opts) {\r\n        const method = 'friends.get';\r\n        // return API(method, opts);\r\n        return connect.send('VKWebAppCallAPIMethod', {method, params: {...opts, v: '5.95'}});\r\n    },\r\n    getRequests (opts) {\r\n        const method = 'friends.getRequests';\r\n        return API(method, opts);\r\n    },\r\n    deleteFriends (opts) {\r\n        const method = 'friends.delete';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nconst Likes = {\r\n    getLikePosts (opts) {\r\n        const method = 'fave.getPosts';\r\n        return API(method, opts);\r\n    },\r\n    getLikePhotos (opts) {\r\n        const method = 'fave.getPhotos';\r\n        return API(method, opts);\r\n    },\r\n    deleteLike (opts) {\r\n        const method = 'likes.delete';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nexport {\r\n    Account,\r\n    Users,\r\n    Friends,\r\n    Likes\r\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, ListItem, Button, Group, Div, Avatar, PanelHeader} from '@vkontakte/vkui';\n\nconst Home = ({id, go, fetchedUser}) => (\n    <Panel id={id}>\n        {console.log(fetchedUser)}\n        <PanelHeader>VK Tools</PanelHeader>\n        {fetchedUser &&\n        <Group title=\"Ваш аккаунт\">\n            <ListItem\n                before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n            >\n                {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n            </ListItem>\n        </Group>}\n\n        <Group title=\"Панель управления\">\n            <Div>\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"friends\">\n                    Друзья в инстаграме\n                </Button>\n            </Div>\n        </Group>\n    </Panel>\n);\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Home;\n","import {\n    Panel,\n    Button,\n    Group,\n    Div,\n    Avatar,\n    PanelHeader,\n    HeaderButton,\n    Cell,\n    IOS,\n    Spinner,\n    Progress\n} from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport {Friends, Users} from '../api';\n\nclass VueFriends extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            usersInfo: [],\n            isSpinner: true,\n            countFriendsInstagram: 0\n        };\n    }\n\n    getFriends () {\n        let offsetFriendsInterval = 0;\n        this.friendsInterval = setInterval(() => {\n            Friends.getFriends({\n                count: 100,\n                offset: offsetFriendsInterval,\n                access_token: this.props.access_token\n            })\n                .then(data => {\n                    offsetFriendsInterval += 100;\n                    if (data.error) {\n                        clearInterval(this.friendsInterval);\n                        this.setState({isSpinner: false});\n                    } else {\n                        this.getUsersInfo(data.response.items)\n                            .then(res => {\n                                this.setState({isSpinner: false});\n                                if (res.error) {\n                                    console.error('Ошибка', res.error);\n                                } else if (!res.response.length) {\n                                    clearInterval(this.friendsInterval);\n                                } else {\n                                    this.setState((state) => {\n                                        res.response.forEach(item => {\n                                            if(item.instagram) state.usersInfo.push(item);\n                                        });\n                                    });\n                                    this.forceUpdate();\n                                }\n                            })\n                            .catch(e => console.error(e));\n                    }\n                })\n                .catch(e => console.error(e));\n        }, 2000);\n    }\n\n    getUsersInfo (ids) {\n        const strFriendsIds = ids.slice(0, 100).join(',');\n        return Users.getUsers({\n            user_ids: strFriendsIds,\n            fields: 'photo_200, contacts, site, education, universities, status, common_count, occupation, nickname, relatives, relation, personal, connections',\n            access_token: this.props.access_token\n        });\n    }\n\n    goInstagram (id) {\n        return window.open(`https://www.instagram.com/${id}`);\n    }\n\n    prev (e) {\n        clearInterval(this.subscribersInterval);\n        clearInterval(this.friendsInterval);\n        this.props.go(e);\n    }\n\n    componentDidMount () {\n        this.getFriends();\n    }\n\n    render () {\n        return (\n            <Panel id={this.props.id}>\n                <PanelHeader\n                    left={<HeaderButton onClick={this.prev.bind(this)} data-to=\"home\">\n                        {this.osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n                    </HeaderButton>}\n                >\n                    Друзья\n                </PanelHeader>\n                <Group title={`Друзья в инстаграме ${this.state.usersInfo.length}`}>\n                    {\n                        this.state.isSpinner &&\n                        <Cell size=\"l\">\n                            <Spinner size=\"large\" style={{margin: '150px 0'}}/>\n                        </Cell>\n                    }\n                    {\n                        this.state.usersInfo.map((friend, index) => {\n                            return (\n                                <div key={index}>\n                                    {\n                                        friend.instagram &&\n                                        <Cell\n                                            size=\"l\"\n                                            description={friend.status || ''}\n                                            before={<Avatar src={friend.photo_200_orig}/>}\n                                            bottomContent={\n                                                <Button onClick={\n                                                    this.goInstagram.bind(this, friend.instagram)\n                                                }>Instagram</Button>\n                                            }\n                                        >\n                                            {`${friend.first_name} ${friend.last_name}`}\n                                        </Cell>\n                                    }\n                                </div>\n                            );\n                        })\n                    }\n                </Group>\n            </Panel>\n        );\n    }\n}\n\nVueFriends.propTypes = {\n    go: PropTypes.func.isRequired,\n    access_token: PropTypes.string.isRequired\n};\n\nexport default VueFriends;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect-promise';\nimport {View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport {Users} from './api';\n\nimport Home from './panels/Home';\nimport VueFriends from './panels/VueFriends';\n\nclass App extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            activePanel: 'home',\n            fetchedUser: null,\n            access_token: null\n        };\n    }\n\n    componentDidMount () {\n        connect.send('VKWebAppGetAuthToken', {app_id: 6940370, scope: 'friends,photos,video,pages,status,notes,wall,docs,groups,stats,market'})\n            .then(res => {\n                this.setState({access_token: res.data.access_token});\n                console.info('access_token', res);\n                this.getUser();\n            })\n            .catch(e => console.error('ERR VKWebAppGetUserInfo', e));\n        // connect.send(\"VKWebAppGetUserInfo\", {})\n        //     .then(res => this.setState({fetchedUser: res.data}))\n        //     .catch(e => console.error('ERR VKWebAppGetUserInfo', e));\n    }\n\n    getUser () {\n        Users.getUsers({\n            fields: 'photo_200, contacts, site, education, universities, status, common_count, occupation, nickname, relatives, relation, personal, connections',\n            access_token: this.state.access_token\n        })\n            .then(res => this.setState({fetchedUser: res.data}))\n            .catch(e => console.log(e));\n    }\n\n    go = (e) => {\n        this.setState({activePanel: e.currentTarget.dataset.to})\n    };\n\n    render () {\n        return (\n            <View activePanel={this.state.activePanel}>\n                <Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go}/>\n                <VueFriends\n                    id=\"friends\"\n                    go={this.go}\n                    access_token={this.state.access_token}\n                />\n            </View>\n        );\n    }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect-promise';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {})\n    .then(res => console.log('VKWebAppInit', res))\n    .catch(e => console.error('ERR VKWebAppInit', e));\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}