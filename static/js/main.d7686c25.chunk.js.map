{"version":3,"sources":["api/index.js","panels/Home.js","panels/VueFriends.js","App.js","index.js"],"names":["Users","opts","connect","send","method","params","Object","objectSpread","v","Home","_ref","id","go","fetchedUser","access_token","react_default","a","createElement","vkui","console","log","title","before","photo_200","src","description","city","concat","first_name","last_name","size","level","onClick","data-to","VueFriends","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","usersInfo","isSpinner","countFriendsInstagram","_this2","offsetFriendsInterval","friendsInterval","setInterval","count","offset","fields","then","res","setState","_state$usersInfo","push","apply","toConsumableArray","data","response","items","catch","e","window","open","clearInterval","subscribersInterval","getFriends","_this3","left","prev","bind","osname","IOS","chevron_back_default","back_default","length","error","style","margin","map","friend","index","key","status","bottomContent","goInstagram","instagram","React","Component","App","activePanel","currentTarget","dataset","to","connect1","subscribe","detail","type","getUser","app_id","scope","panels_Home","panels_VueFriends","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d7686c25.chunk.js","sourcesContent":["import fetchJsonp from 'fetch-jsonp';\r\nimport connect from '@vkontakte/vkui-connect-promise';\r\n\r\nconst getProfilesUrl = (method, opt) => {\r\n    let urlOpts = '';\r\n    let optKeys = Object.keys(opt);\r\n    optKeys.forEach(item => urlOpts += `${item}=${opt[item]}&`);\r\n    return `https://api.vk.com/method/${method}?${urlOpts}v=5.80`\r\n};\r\n\r\nconst API = (method, opt) => {\r\n    return fetchJsonp(getProfilesUrl(method, opt))\r\n      .then(res => res.json())\r\n      .catch(error => console.error(error));\r\n};\r\nconst Account = {\r\n    getInfo (opts) {\r\n        const method = 'account.getInfo';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nconst Users = {\r\n    getUsers (opts) {\r\n        const method = 'users.get';\r\n        // return API(method, opts);\r\n        return connect.send('VKWebAppCallAPIMethod', {method, params: {...opts, v: '5.95'}});\r\n    },\r\n    getFollowers (opts) {\r\n        const method = 'users.getFollowers';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nconst Friends = {\r\n    getFriends (opts) {\r\n        const method = 'friends.get';\r\n        // return API(method, opts);\r\n        return connect.send('VKWebAppCallAPIMethod', {method, params: {...opts, v: '5.95'}});\r\n    },\r\n    getRequests (opts) {\r\n        const method = 'friends.getRequests';\r\n        return API(method, opts);\r\n    },\r\n    deleteFriends (opts) {\r\n        const method = 'friends.delete';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nconst Likes = {\r\n    getLikePosts (opts) {\r\n        const method = 'fave.getPosts';\r\n        return API(method, opts);\r\n    },\r\n    getLikePhotos (opts) {\r\n        const method = 'fave.getPhotos';\r\n        return API(method, opts);\r\n    },\r\n    deleteLike (opts) {\r\n        const method = 'likes.delete';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nexport {\r\n    Account,\r\n    Users,\r\n    Friends,\r\n    Likes\r\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, ListItem, Button, Group, Div, Avatar, PanelHeader} from '@vkontakte/vkui';\n\nconst Home = ({id, go, fetchedUser, access_token}) => (\n    <Panel id={id}>\n        {console.log(fetchedUser)}\n        <PanelHeader>VK Tools</PanelHeader>\n        {fetchedUser &&\n        <Group title=\"Ваш аккаунт\">\n            <ListItem\n                before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n            >\n                {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n            </ListItem>\n        </Group>}\n\n        <Group title=\"Панель управления\">\n            <Div>\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"friends\">\n                    Друзья в инстаграме {access_token}\n                </Button>\n            </Div>\n        </Group>\n    </Panel>\n);\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Home;\n","import {\n    Panel,\n    Button,\n    Group,\n    Div,\n    Avatar,\n    PanelHeader,\n    HeaderButton,\n    Cell,\n    IOS,\n    Spinner,\n    Progress\n} from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport {Friends, Users} from '../api';\nimport connect from '@vkontakte/vkui-connect-promise';\n\nclass VueFriends extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            usersInfo: [],\n            isSpinner: true,\n            countFriendsInstagram: 0,\n        };\n    }\n\n    getFriends () {\n        let offsetFriendsInterval = 0;\n        this.friendsInterval = setInterval(() => {\n            connect.send('VKWebAppCallAPIMethod', {\n                    method: 'friends.get',\n                    params: {\n                        count: 100,\n                        offset: offsetFriendsInterval,\n                        fields: 'nickname, domain, sex, bdate, city, country, timezone, photo_50, photo_100, photo_200_orig, has_mobile, contacts, education, online, relation, last_seen, status, can_write_private_message, can_see_all_posts, can_post, universities ',\n                        access_token: this.props.access_token,\n                        v: '5.95'\n                    }\n                })\n                .then(res => {\n                    console.log(res)\n                    this.setState(state => state.usersInfo.push(...res.data.response.items));\n                    offsetFriendsInterval += 100;\n                })\n                .catch(e => console.log('ERR getFriends', e));\n        }, 2000);\n    }\n\n    goInstagram (id) {\n        return window.open(`https://www.instagram.com/${id}`);\n    }\n\n    prev (e) {\n        clearInterval(this.subscribersInterval);\n        clearInterval(this.friendsInterval);\n        this.props.go(e);\n    }\n\n    componentDidMount () {\n        this.getFriends();\n    }\n\n    render () {\n        return (\n            <Panel id={this.props.id}>\n                <PanelHeader\n                    left={<HeaderButton onClick={this.prev.bind(this)} data-to=\"home\">\n                        {this.osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n                    </HeaderButton>}\n                >\n                    Друзья\n                </PanelHeader>\n                <Group title={`Друзья в инстаграме ${this.state.usersInfo.length}`}>\n                    {this.state.error}\n                    {\n                        this.state.isSpinner &&\n                        <Cell size=\"l\">\n                            <Spinner size=\"large\" style={{margin: '150px 0'}}/>\n                        </Cell>\n                    }\n                    {\n                        this.state.usersInfo.map((friend, index) => {\n                            return (\n                                <div key={index}>\n                                    <Cell\n                                        size=\"l\"\n                                        description={friend.status || ''}\n                                        before={<Avatar src={friend.photo_200}/>}\n                                        bottomContent={\n                                            <Button onClick={\n                                                this.goInstagram.bind(this, friend.instagram)\n                                            }>Instagram</Button>\n                                        }\n                                    >\n                                        {`${friend.first_name} ${friend.last_name}`}\n                                        {friend}\n                                    </Cell>\n                                </div>\n                            );\n                        })\n                    }\n                </Group>\n            </Panel>\n        );\n    }\n}\n\nVueFriends.propTypes = {\n    go: PropTypes.func.isRequired,\n    access_token: PropTypes.string.isRequired\n};\n\nexport default VueFriends;\n","import React from 'react';\nimport connect1 from '@vkontakte/vkui-connect';\nimport connect from '@vkontakte/vkui-connect-promise';\nimport {View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport {Users} from './api';\n\nimport Home from './panels/Home';\nimport VueFriends from './panels/VueFriends';\n\nclass App extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            activePanel: 'home',\n            fetchedUser: null,\n            access_token: null\n        };\n    }\n\n    componentDidMount () {\n        connect1.subscribe((e) => {\n            switch (e.detail.type) {\n                case 'VKWebAppAccessTokenReceived':\n                    this.setState({ access_token : e.detail.data.access_token });\n                    console.log('access_token', e.detail.data.access_token);\n                    this.getUser();\n                    break;\n                default:\n                    console.log(e.detail);\n            }\n        });\n        connect1.send(\"VKWebAppGetAuthToken\", {\"app_id\": 6940370, \"scope\": \"friends,status,wall,groups\"});\n\n        // connect.send(\"VKWebAppGetUserInfo\", {})\n        //     .then(res => this.setState({fetchedUser: res.data}))\n        //     .catch(e => console.log('ERR VKWebAppGetUserInfo', e));\n\n\n    }\n\n    getUser() {\n        Users.getUsers({\n            fields: 'photo_200',\n            access_token: this.state.access_token\n        })\n            .then(res => {\n                console.log(res)\n                this.setState({ fetchedUser : res.response[0]});\n            })\n    }\n\n    go = (e) => {\n        this.setState({activePanel: e.currentTarget.dataset.to})\n    };\n\n    render () {\n        return (\n            <View activePanel={this.state.activePanel}>\n                <Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} access_token={this.state.access_token}/>\n                <VueFriends\n                    id=\"friends\"\n                    go={this.go}\n                    access_token={this.state.access_token}\n                />\n            </View>\n        );\n    }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect-promise';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {})\n    .then(res => console.log('VKWebAppInit', res))\n    .catch(e => console.error('ERR VKWebAppInit', e));\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}