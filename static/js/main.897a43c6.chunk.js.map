{"version":3,"sources":["api/index.js","panels/Home.js","panels/VueFriendsBookmarks.js","panels/VueFriendsForInstagram.js","panels/VueFriendsIsDeleted.js","panels/VueFriendsIsList.js","panels/VueFriendsLastActivity.js","panels/VueFriendsMutual.js","App.js","index.js"],"names":["Users","opts","connect","send","method","params","Object","objectSpread","v","Friends","Home","_ref","id","go","fetchedUser","access_token","react_default","a","createElement","vkui","console","log","title","onClick","window","open","concat","before","photo_200","src","description","city","first_name","last_name","size","level","data-to","VueFriendsBookmarks","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","usersInfo","isSpinner","getFriends","_this2","offsetFriendsInterval","friendsInterval","setInterval","count","offset","then","res","data","response","items","length","getUsersInfo","forEach","item","is_favorite","setState","push","forceUpdate","catch","e","clearInterval","ids","strFriendsIds","slice","join","user_ids","fields","left","prev","bind","osname","IOS","chevron_back_default","back_default","style","margin","map","friend","index","key","status","photo_200_orig","React","Component","VueFriendsForInstagram","instagram","domen","stopPropagation","_this3","bottomContent","zIndex","goInstagram","VueFriendsIsDeleted","deactivated","VueFriendsIsList","friendsIds","getFriendsIds","friendsIdsInterval","_state$friendsIds","apply","toConsumableArray","getFriendsList","friendsListsInterval","_this4","user_id","return_system","VueFriendsLastActivity","moment","locale","frendsItems","sort","b","last_seen","time","_state$usersInfo","format","friendsMutual","userIds","fetchJsonp","d","getFriendsMutual","frend","find","common_count","target_uids","App","activePanel","currentTarget","dataset","to","subscribe","detail","type","getUser","app_id","scope","panels_Home","panels_VueFriendsForInstagram","panels_VueFriendsIsDeleted","panels_VueFriendsIsList","panels_VueFriendsBookmarks","panels_VueFriendsLastActivity","VueFriendsMutual","error","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.897a43c6.chunk.js","sourcesContent":["import connect from '@vkontakte/vkui-connect-promise';\r\n\r\nimport fetchJsonp from 'fetch-jsonp';\r\n\r\nconst V_API = '5.95';\r\n\r\nconst getProfilesUrl = (method, opt) => {\r\n    let urlOpts = '';\r\n    let optKeys = Object.keys(opt);\r\n    optKeys.forEach(item => urlOpts += `${item}=${opt[item]}&`);\r\n    return `https://api.vk.com/method/${method}?${urlOpts}v=${V_API}`\r\n};\r\n\r\nconst API = (method, opt) => {\r\n    return fetchJsonp(getProfilesUrl(method, opt))\r\n      .then(res => res.json())\r\n      .catch(error => console.error(error));\r\n};\r\nconst Account = {\r\n    getInfo (opts) {\r\n        const method = 'account.getInfo';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nconst Users = {\r\n    getUsers (opts) {\r\n        const method = 'users.get';\r\n        return connect.send('VKWebAppCallAPIMethod', {method, params: {...opts, v: V_API}});\r\n    },\r\n    getFollowers (opts) {\r\n        const method = 'users.getFollowers';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nconst Friends = {\r\n    getFriends (opts) {\r\n        const method = 'friends.get';\r\n        return connect.send('VKWebAppCallAPIMethod', {method, params: {...opts, v: V_API}});\r\n    },\r\n    getFriendsLists (opts) {\r\n        const method = 'friends.getLists';\r\n        return connect.send('VKWebAppCallAPIMethod', {method, params: {...opts, v: V_API}});\r\n    },\r\n    getFriendsMutual (opts) {\r\n        const method = 'friends.getMutual';\r\n        return connect.send('VKWebAppCallAPIMethod', {method, params: {...opts, v: V_API}});\r\n    },\r\n    getRequests (opts) {\r\n        const method = 'friends.getRequests';\r\n        return API(method, opts);\r\n    },\r\n    deleteFriends (opts) {\r\n        const method = 'friends.delete';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nconst Likes = {\r\n    getLikePosts (opts) {\r\n        const method = 'fave.getPosts';\r\n        return API(method, opts);\r\n    },\r\n    getLikePhotos (opts) {\r\n        const method = 'fave.getPhotos';\r\n        return API(method, opts);\r\n    },\r\n    deleteLike (opts) {\r\n        const method = 'likes.delete';\r\n        return API(method, opts);\r\n    }\r\n};\r\n\r\nconst Utils = {\r\n    getDateRegistration(id) {\r\n        const url = `https://vk.com/foaf.php?id=${id}`;\r\n        return fetchJsonp(url)\r\n            .then(res => res.json())\r\n            .catch(error => console.error(error));\r\n    }\r\n};\r\n\r\nexport {\r\n    Account,\r\n    Users,\r\n    Friends,\r\n    Likes,\r\n    Utils\r\n};","import {Panel, ListItem, Button, Group, Div, Avatar, PanelHeader} from '@vkontakte/vkui';\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst Home = ({id, go, fetchedUser, access_token}) => (\n    <Panel id={id}>\n        {console.log(fetchedUser)}\n        <PanelHeader>VK Tools</PanelHeader>\n        {fetchedUser &&\n        <Group title=\"Ваш аккаунт\">\n            <ListItem\n                onClick={() => window.open(`https://vk.com/id${fetchedUser.id}`)}\n                before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n            >\n                {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n            </ListItem>\n        </Group>}\n\n        <Group title=\"Панель управления друзьями\">\n            <Div>\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"friendsForInstagram\">\n                    Друзья в инстаграме\n                </Button>\n            </Div>\n            {/* <Div>\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"friendsIsDeleted\">\n                    Удаленные/Забаненые\n                </Button>\n            </Div> */}\n            {/* <Div>\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"friendsMutual\">\n                    Общие друзья\n                </Button>\n            </Div> */}\n            {/* <Div>\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"friendsBookmarks\">\n                    Друзья в закладках\n                </Button>\n            </Div> */}\n            <Div>\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"friendsLastActivity\">\n                    Последняя активность друзей\n                </Button>\n            </Div>\n        </Group>\n    </Panel>\n);\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Home;\n","import {\n    Panel,\n    Button,\n    Group,\n    Avatar,\n    PanelHeader,\n    HeaderButton,\n    Cell,\n    IOS,\n    Spinner\n} from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport {Friends, Users} from '../api';\n\nclass VueFriendsBookmarks extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            usersInfo: [],\n            isSpinner: true\n        };\n    }\n\n    componentDidMount () {\n        this.getFriends();\n    }\n\n    getFriends () {\n        let countFriendsInterval = 100;\n        let offsetFriendsInterval = 0;\n\n        this.friendsInterval = setInterval(() => {\n\n            Friends.getFriends({\n                count: 100,\n                offset: offsetFriendsInterval,\n                access_token: this.props.access_token,\n            })\n                .then(res => {\n\n                    if(!res.data.response.items.length) {\n                        clearInterval(this.friendsInterval);\n                    } else {\n                        offsetFriendsInterval += countFriendsInterval;\n\n                        this.getUsersInfo(res.data.response.items)\n                            .then(res => {\n                                res.data.response.forEach(item => {\n                                    if (item.is_favorite) {\n                                        this.setState(state => state.usersInfo.push(item));\n                                    }\n                                });\n                                this.setState({isSpinner: false});\n                                this.forceUpdate();\n                            })\n                            .catch(e => console.log('ERR GET Users', e));\n                    }\n                })\n                .catch(e => console.log('ERR GET Friends', e));\n\n        }, 2000);\n    }\n\n    getUsersInfo (ids) {\n        const strFriendsIds = ids.slice(0, 100).join(',');\n        return Users.getUsers({\n            user_ids: strFriendsIds,\n            fields: 'photo_id, verified, sex, bdate, city, country, home_town, has_photo, photo_50, photo_100, photo_200_orig, photo_200, photo_400_orig, photo_max, photo_max_orig, online, domain, has_mobile, contacts, site, education, universities, schools, status, last_seen, followers_count, common_count, occupation, nickname, relatives, relation, personal, connections, exports, activities, interests, music, movies, tv, books, games, about, quotes, can_post, can_see_all_posts, can_see_audio, can_write_private_message, can_send_friend_request, is_favorite, is_hidden_from_feed, timezone, screen_name, maiden_name, crop_photo, is_friend, friend_status, career, military, blacklisted, blacklisted_by_me',\n            access_token: this.props.access_token\n        });\n    }\n\n    prev (e) {\n        clearInterval(this.friendsInterval);\n        this.props.go(e);\n    }\n\n    render () {\n        return (\n            <Panel id={this.props.id}>\n                <PanelHeader\n                    left={<HeaderButton onClick={this.prev.bind(this)} data-to=\"home\">\n                        {this.osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n                    </HeaderButton>}\n                >\n                    Друзья\n                </PanelHeader>\n                <Group title={`Друзья в закладках ${this.state.usersInfo.length}`}>\n                    {\n                        this.state.isSpinner &&\n                        <Cell size=\"l\">\n                            <Spinner size=\"large\" style={{margin: '150px 0'}}/>\n                        </Cell>\n                    }\n                    {\n                        this.state.usersInfo &&\n                        this.state.usersInfo.map((friend, index) => {\n                            return (\n                                <div key={index}>\n                                    <Cell\n                                        size=\"l\"\n                                        description={friend.status || ''}\n                                        before={<Avatar src={friend.photo_200 || friend.photo_200_orig}/>}\n                                        onClick={() => window.open(`https://vk.com/id${friend.id}`)}\n                                    >\n\n                                        {`${friend.first_name} ${friend.last_name}`}\n                                    </Cell>\n                                </div>\n                            );\n                        })\n                    }\n                </Group>\n            </Panel>\n        );\n    }\n}\n\nVueFriendsBookmarks.propTypes = {\n    go: PropTypes.func.isRequired,\n    access_token: PropTypes.string.isRequired\n};\n\nexport default VueFriendsBookmarks;\n","import {\n    Panel,\n    Button,\n    Group,\n    Avatar,\n    PanelHeader,\n    HeaderButton,\n    Cell,\n    IOS,\n    Spinner\n} from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport {Friends, Users} from '../api';\n\nclass VueFriendsForInstagram extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            usersInfo: [],\n            isSpinner: true\n        };\n    }\n\n    componentDidMount () {\n        this.getFriends();\n    }\n\n    getFriends () {\n        let countFriendsInterval = 100;\n        let offsetFriendsInterval = 0;\n\n        this.friendsInterval = setInterval(() => {\n\n            Friends.getFriends({\n                count: 100,\n                offset: offsetFriendsInterval,\n                access_token: this.props.access_token,\n            })\n                .then(res => {\n\n                    if(!res.data.response.items.length) {\n                        clearInterval(this.friendsInterval);\n                    } else {\n                        offsetFriendsInterval += countFriendsInterval;\n\n                        this.getUsersInfo(res.data.response.items)\n                            .then(res => {\n                                res.data.response.forEach(item => {\n                                    if (item.instagram) {\n                                        this.setState(state => state.usersInfo.push(item));\n                                    }\n                                });\n                                this.setState({isSpinner: false});\n                                this.forceUpdate();\n                            })\n                            .catch(e => console.log('ERR GET Users', e));\n                    }\n                })\n                .catch(e => console.log('ERR GET Friends', e));\n\n        }, 2000);\n    }\n\n    getUsersInfo (ids) {\n        const strFriendsIds = ids.slice(0, 100).join(',');\n        return Users.getUsers({\n            user_ids: strFriendsIds,\n            fields: 'photo_id, verified, sex, bdate, city, country, home_town, has_photo, photo_50, photo_100, photo_200_orig, photo_200, photo_400_orig, photo_max, photo_max_orig, online, domain, has_mobile, contacts, site, education, universities, schools, status, last_seen, followers_count, common_count, occupation, nickname, relatives, relation, personal, connections, exports, activities, interests, music, movies, tv, books, games, about, quotes, can_post, can_see_all_posts, can_see_audio, can_write_private_message, can_send_friend_request, is_favorite, is_hidden_from_feed, timezone, screen_name, maiden_name, crop_photo, is_friend, friend_status, career, military, blacklisted, blacklisted_by_me',\n            access_token: this.props.access_token\n        });\n    }\n\n    goInstagram(e, domen) {\n        e.stopPropagation();\n        return window.open(`https://www.instagram.com/${domen}`);\n    }\n\n    prev (e) {\n        clearInterval(this.friendsInterval);\n        this.props.go(e);\n    }\n\n    render () {\n        return (\n            <Panel id={this.props.id}>\n                <PanelHeader\n                    left={<HeaderButton onClick={this.prev.bind(this)} data-to=\"home\">\n                        {this.osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n                    </HeaderButton>}\n                >\n                    Друзья\n                </PanelHeader>\n                <Group title={`Друзья в инстаграме ${this.state.usersInfo.length}`}>\n                    {\n                        this.state.isSpinner &&\n                        <Cell size=\"l\">\n                            <Spinner size=\"large\" style={{margin: '150px 0'}}/>\n                        </Cell>\n                    }\n                    {\n                        this.state.usersInfo &&\n                        this.state.usersInfo.map((friend, index) => {\n                            return (\n                                <div key={index}>\n                                    <Cell\n                                        size=\"l\"\n                                        description={friend.status || ''}\n                                        before={<Avatar src={friend.photo_200 || friend.photo_200_orig}/>}\n                                        onClick={() => window.open(`https://vk.com/id${friend.id}`)}\n                                        bottomContent={\n                                            <div style={{zIndex: 999}}>\n                                                <Button onClick={\n                                                    (e) => this.goInstagram(e, friend.instagram)\n                                                }>Instagram</Button>\n                                            </div>\n                                        }\n                                    >\n                                        {`${friend.first_name} ${friend.last_name}`}\n                                    </Cell>\n                                </div>\n                            );\n                        })\n                    }\n                </Group>\n            </Panel>\n        );\n    }\n}\n\nVueFriendsForInstagram.propTypes = {\n    go: PropTypes.func.isRequired,\n    access_token: PropTypes.string.isRequired\n};\n\nexport default VueFriendsForInstagram;\n","import {\n    Panel,\n    Group,\n    Avatar,\n    PanelHeader,\n    HeaderButton,\n    Cell,\n    IOS,\n    Spinner\n} from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport {Friends} from '../api';\n\nclass VueFriendsIsDeleted extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            usersInfo: [],\n            isSpinner: true\n        };\n    }\n\n    componentDidMount () {\n        this.getFriends();\n    }\n\n    getFriends () {\n        let countFriendsInterval = 5000;\n        let offsetFriendsInterval = 0;\n\n        this.friendsInterval = setInterval(() => {\n\n            Friends.getFriends({\n                count: countFriendsInterval,\n                offset: offsetFriendsInterval,\n                fields: 'bdate, city, country, photo_200_orig, contacts, online, last_seen',\n                access_token: this.props.access_token,\n            })\n                .then(res => {\n\n                    if(!res.data.response.items.length) {\n                        clearInterval(this.friendsInterval);\n                    } else {\n                        offsetFriendsInterval += countFriendsInterval;\n\n                        res.data.response.items.forEach(item => {\n                            if (item.deactivated === 'deactivated' ||\n                                item.deactivated === 'banned') {\n                                this.setState(state => state.usersInfo.push(item));\n                            }\n                        });\n                        this.setState({isSpinner: false});\n                        this.forceUpdate();\n                    }\n                })\n                .catch(e => console.log('ERR GET Friends', e));\n\n        }, 2000);\n    }\n\n    prev (e) {\n        clearInterval(this.friendsInterval);\n        this.props.go(e);\n    }\n\n    render () {\n        return (\n            <Panel id={this.props.id}>\n                <PanelHeader\n                    left={<HeaderButton onClick={this.prev.bind(this)} data-to=\"home\">\n                        {this.osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n                    </HeaderButton>}\n                >\n                    Друзья\n                </PanelHeader>\n                <Group title={`Заблокированные друзья ${this.state.usersInfo.length}`}>\n                    {\n                        this.state.isSpinner &&\n                        <Cell size=\"l\">\n                            <Spinner size=\"large\" style={{margin: '150px 0'}}/>\n                        </Cell>\n                    }\n                    {\n                        this.state.usersInfo &&\n                        this.state.usersInfo.map((friend, index) => {\n                            return (\n                                <div key={index}>\n                                    <Cell\n                                        size=\"l\"\n                                        description={friend.status || ''}\n                                        before={<Avatar src={friend.photo_200 || friend.photo_200_orig}/>}\n                                        bottomContent={\n                                            friend.deactivated === 'deactivated' ? 'Удален' :\n                                            friend.deactivated === 'banned' ? 'Забанен': ''\n                                        }\n                                        onClick={() => window.open(`https://vk.com/id${friend.id}`)}\n                                    >\n                                        {`${friend.first_name} ${friend.last_name}`}\n                                    </Cell>\n                                </div>\n                            );\n                        })\n                    }\n                </Group>\n            </Panel>\n        );\n    }\n}\n\nVueFriendsIsDeleted.propTypes = {\n    go: PropTypes.func.isRequired,\n    access_token: PropTypes.string.isRequired\n};\n\nexport default VueFriendsIsDeleted;\n","import {\n    Panel,\n    Group,\n    Avatar,\n    PanelHeader,\n    HeaderButton,\n    Cell,\n    IOS,\n    Spinner\n} from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport {Friends} from '../api';\n\nclass VueFriendsIsList extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            usersInfo: [],\n            isSpinner: true,\n\n            friendsIds: []\n        };\n    }\n\n    componentDidMount () {\n        this.getFriendsIds();\n    }\n\n    getFriendsIds () {\n        let countFriendsInterval = 5000;\n        let offsetFriendsInterval = 0;\n\n        this.friendsIdsInterval = setInterval(() => {\n\n            Friends.getFriends({\n                count: countFriendsInterval,\n                offset: offsetFriendsInterval,\n                access_token: this.props.access_token,\n            })\n                .then(res => {\n                    if(!res.data.response.items.length) {\n                        clearInterval(this.friendsIdsInterval);\n                        this.getFriendsList();\n                    } else {\n                        offsetFriendsInterval += countFriendsInterval;\n                        this.setState(state => state.friendsIds.push(...res.data.response.items));\n                    }\n                })\n                .catch(e => console.log('ERR GET Friends', e));\n\n        }, 2000);\n    }\n\n    getFriends () {\n        let countFriendsInterval = 5000;\n        let offsetFriendsInterval = 0;\n\n        this.friendsListsInterval = setInterval(() => {\n\n            Friends.getFriends({\n                count: countFriendsInterval,\n                offset: offsetFriendsInterval,\n                access_token: this.props.access_token,\n            })\n                .then(res => {\n\n                    if(!res.data.response.items.length) {\n                        clearInterval(this.friendsListsInterval);\n                    } else {\n                        offsetFriendsInterval += countFriendsInterval;\n\n                        res.data.response.items.forEach(id => {\n\n                        });\n                        // this.setState({isSpinner: false});\n                        // this.forceUpdate();\n                    }\n                })\n                .catch(e => console.log('ERR GET Friends', e));\n\n        }, 2000);\n    }\n\n    getFriendsList () {\n        let countFriendsInterval = 5000;\n        let offsetFriendsInterval = 0;\n\n        this.friendsListsInterval = setInterval(() => {\n\n            Friends.getFriendsLists({\n                user_id: this.state.friendsIds[0],\n                return_system: 0,\n                access_token: this.props.access_token,\n            })\n                .then(res => {\n\n                    if(!res.data.response.items.length) {\n                        clearInterval(this.friendsListsInterval);\n                    } else {\n                        offsetFriendsInterval += countFriendsInterval;\n\n                        res.data.response.items.forEach(id => {\n\n                        });\n                        // this.setState({isSpinner: false});\n                        // this.forceUpdate();\n                    }\n                })\n                .catch(e => console.log('ERR GET Friends', e));\n\n        }, 2000);\n    }\n\n    prev (e) {\n        clearInterval(this.friendsIdsInterval);\n        clearInterval(this.friendsListsInterval);\n        this.props.go(e);\n    }\n\n    render () {\n        return (\n            <Panel id={this.props.id}>\n                <PanelHeader\n                    left={<HeaderButton onClick={this.prev.bind(this)} data-to=\"home\">\n                        {this.osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n                    </HeaderButton>}\n                >\n                    Друзья\n                </PanelHeader>\n                <Group title={`Друзья в инстаграме ${this.state.usersInfo.length}`}>\n                    {\n                        this.state.isSpinner &&\n                        <Cell size=\"l\">\n                            <Spinner size=\"large\" style={{margin: '150px 0'}}/>\n                        </Cell>\n                    }\n                    {\n                        this.state.usersInfo &&\n                        this.state.usersInfo.map((friend, index) => {\n                            return (\n                                <div key={index}>\n                                    <Cell\n                                        size=\"l\"\n                                        description={friend.status || ''}\n                                        before={<Avatar src={friend.photo_200 || friend.photo_200_orig}/>}\n                                        bottomContent={\n                                            friend.deactivated === 'deactivated' ? 'Удален' :\n                                            friend.deactivated === 'banned' ? 'Забанен': ''\n                                        }\n                                        onClick={() => window.open(`https://vk.com/id${friend.id}`)}\n                                    >\n                                        {`${friend.first_name} ${friend.last_name}`}\n                                    </Cell>\n                                </div>\n                            );\n                        })\n                    }\n                </Group>\n            </Panel>\n        );\n    }\n}\n\nVueFriendsIsList.propTypes = {\n    go: PropTypes.func.isRequired,\n    access_token: PropTypes.string.isRequired\n};\n\nexport default VueFriendsIsList;\n","import {\n    Panel,\n    Button,\n    Group,\n    Avatar,\n    PanelHeader,\n    HeaderButton,\n    Cell,\n    IOS,\n    Spinner\n} from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport React from 'react';\nimport moment from 'moment';\n\nimport PropTypes from 'prop-types';\n\nimport {Friends} from '../api';\n\nclass VueFriendsLastActivity extends React.Component {\n    constructor (props) {\n        super(props);\n        moment().locale('ru');\n        this.state = {\n            usersInfo: [],\n            isSpinner: true\n        };\n    }\n\n    componentDidMount () {\n        this.getFriends();\n    }\n\n    getFriends () {\n        let countFriendsInterval = 100;\n        let offsetFriendsInterval = 0;\n\n        this.friendsInterval = setInterval(() => {\n\n            Friends.getFriends({\n                count: countFriendsInterval,\n                fields: 'nickname, domain, sex, bdate, city, country, timezone, photo_50, photo_100, photo_200_orig, has_mobile, contacts, education, online, relation, last_seen, status, can_write_private_message, can_see_all_posts, can_post, universities',\n                offset: offsetFriendsInterval,\n                access_token: this.props.access_token,\n            })\n                .then(res => {\n\n                    if(!res.data.response.items.length) {\n                        clearInterval(this.friendsInterval);\n                    } else {\n                        offsetFriendsInterval += countFriendsInterval;\n                        const frendsItems = res.data.response.items.sort((a, b) => {\n                            if (!a.last_seen || !b.last_seen ) return 0;\n\n                            if (a.last_seen.time < b.last_seen.time) {\n                                return -1;\n                            }\n                            if (a.last_seen.time > b.last_seen.time) {\n                                return 1;\n                            }\n                            return 0;\n                        });\n                        console.log(frendsItems);\n                        this.setState(state => {\n                            state.usersInfo.push(...frendsItems);\n                            state.isSpinner = false;\n                        });\n                        this.forceUpdate();\n                    }\n                })\n                .catch(e => console.log('ERR GET Friends', e));\n\n        }, 2000);\n    }\n\n    goInstagram(e, domen) {\n        e.stopPropagation();\n        return window.open(`https://www.instagram.com/${domen}`);\n    }\n\n    prev (e) {\n        clearInterval(this.friendsInterval);\n        this.props.go(e);\n    }\n\n    render () {\n        return (\n            <Panel id={this.props.id}>\n                <PanelHeader\n                    left={<HeaderButton onClick={this.prev.bind(this)} data-to=\"home\">\n                        {this.osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n                    </HeaderButton>}\n                >\n                    Друзья\n                </PanelHeader>\n                <Group title={`Последняя активность друзей ${this.state.usersInfo.length}`}>\n                    {\n                        this.state.isSpinner &&\n                        <Cell size=\"l\">\n                            <Spinner size=\"large\" style={{margin: '150px 0'}}/>\n                        </Cell>\n                    }\n                    {\n                        this.state.usersInfo &&\n                        this.state.usersInfo.map((friend, index) => {\n                            return (\n                                <div key={index}>\n                                    <Cell\n                                        size=\"l\"\n                                        description={friend.status || ''}\n                                        before={<Avatar src={friend.photo_200 || friend.photo_200_orig}/>}\n                                        onClick={() => window.open(`https://vk.com/id${friend.id}`)}\n\n                                        bottomContent={\n                                            friend.last_seen ?\n                                                moment(friend.last_seen.time*1000).format('DD MMM YYYY HH:mm:ss'):'неизвестно'\n                                        }\n                                    >\n\n                                        {`${friend.first_name} ${friend.last_name}`}\n                                    </Cell>\n                                </div>\n                            );\n                        })\n                    }\n                </Group>\n            </Panel>\n        );\n    }\n}\n\nVueFriendsLastActivity.propTypes = {\n    go: PropTypes.func.isRequired,\n    access_token: PropTypes.string.isRequired\n};\n\nexport default VueFriendsLastActivity;\n","import {\r\n    Panel,\r\n    Button,\r\n    Group,\r\n    Avatar,\r\n    PanelHeader,\r\n    HeaderButton,\r\n    Cell,\r\n    IOS,\r\n    Spinner\r\n} from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nimport fetchJsonp from 'fetch-jsonp';\r\n\r\nimport React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Friends, Users} from '../api';\r\n\r\nclass friendsMutual extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            usersInfo: [],\r\n            userIds: [],\r\n            isSpinner: true\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        // this.getFriends();\r\n        fetchJsonp('https://www.instagram.com/elijah___leonov/?__a=1')\r\n            .then(d => {\r\n                console.log(d)\r\n            })\r\n            .catch(e => console.log('ERR GET', e));\r\n    }\r\n\r\n    getFriends () {\r\n        let countFriendsInterval = 100;\r\n        let offsetFriendsInterval = 0;\r\n\r\n        this.friendsInterval = setInterval(() => {\r\n\r\n            Friends.getFriends({\r\n                count: countFriendsInterval,\r\n                offset: offsetFriendsInterval,\r\n                fields: 'nickname, domain, sex, bdate, city, country, timezone, photo_50, photo_100, photo_200_orig, has_mobile, contacts, education, online, relation, last_seen, status, can_write_private_message, can_see_all_posts, can_post, universities',\r\n                access_token: this.props.access_token,\r\n            })\r\n                .then(res => {\r\n                    if(!res.data.response.items.length) {\r\n                        clearInterval(this.friendsInterval);\r\n                    } else {\r\n                        offsetFriendsInterval += countFriendsInterval;\r\n\r\n                        res.data.response.items.forEach(item => {\r\n                            if (item.deactivated !== 'deactivated' ||\r\n                                item.deactivated !== 'banned') {\r\n                                this.setState(state => {\r\n                                    state.usersInfo.push(item);\r\n                                    state.userIds.push(item.id);\r\n                                });\r\n                            }\r\n                        });\r\n\r\n                        this.getFriendsMutual(this.state.userIds)\r\n                            .then(res => {\r\n                                console.log(res);\r\n                                debugger;\r\n                                this.state.usersInfo.forEach((frend) => {\r\n                                    res.data.response.forEach((item) => {\r\n                                        this.setState((state) => {\r\n                                            let frend = state.usersInfo.find(frend => frend.id === item.id);\r\n                                            frend.common_count = item.common_count;\r\n                                        });\r\n                                    });\r\n                                });\r\n\r\n                                this.setState({isSpinner: false});\r\n                                this.forceUpdate();\r\n                            })\r\n                            .catch(e => console.log('ERR GET Users', e));\r\n                        }\r\n                })\r\n                .catch(e => console.log('ERR GET Friends', e));\r\n\r\n        }, 2000);\r\n    }\r\n\r\n    getFriendsMutual (ids) {\r\n        const strFriendsIds = ids.slice(0, 100).join(',');\r\n        return Friends.getFriendsMutual({\r\n            target_uids: ids,\r\n            access_token: this.props.access_token\r\n        });\r\n    }\r\n\r\n    prev (e) {\r\n        clearInterval(this.friendsInterval);\r\n        this.props.go(e);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Panel id={this.props.id}>\r\n                <PanelHeader\r\n                    left={<HeaderButton onClick={this.prev.bind(this)} data-to=\"home\">\r\n                        {this.osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n                    </HeaderButton>}\r\n                >\r\n                    Друзья\r\n                </PanelHeader>\r\n                <Group title={`Друзья в инстаграме ${this.state.usersInfo.length}`}>\r\n                    {\r\n                        this.state.isSpinner &&\r\n                        <Cell size=\"l\">\r\n                            <Spinner size=\"large\" style={{margin: '150px 0'}}/>\r\n                        </Cell>\r\n                    }\r\n                    {\r\n                        this.state.usersInfo &&\r\n                        this.state.usersInfo.map((friend, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <Cell\r\n                                        size=\"l\"\r\n                                        description={`Количество общих друзей: ${friend.common_count || '0'}`}\r\n                                        before={<Avatar src={friend.photo_200 || friend.photo_200_orig}/>}\r\n                                    >\r\n                                        {`${friend.first_name} ${friend.last_name}`}\r\n                                    </Cell>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </Group>\r\n            </Panel>\r\n        );\r\n    }\r\n}\r\n\r\nfriendsMutual.propTypes = {\r\n    go: PropTypes.func.isRequired,\r\n    access_token: PropTypes.string.isRequired\r\n};\r\n\r\nexport default friendsMutual;\r\n","import connect from '@vkontakte/vkui-connect';\nimport {View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport React from 'react';\n\nimport {Users} from './api';\n\nimport Home from './panels/Home';\nimport VueFriendsBookmarks from './panels/VueFriendsBookmarks';\nimport VueFriendsForInstagram from './panels/VueFriendsForInstagram';\nimport VueFriendsIsDeleted from './panels/VueFriendsIsDeleted';\nimport VueFriendsIsList from './panels/VueFriendsIsList';\nimport VueFriendsLastActivity from './panels/VueFriendsLastActivity';\nimport VueFriendsMutual from './panels/VueFriendsMutual';\n\nclass App extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            activePanel: 'home',\n            fetchedUser: null,\n            access_token: null\n        };\n    }\n\n    componentDidMount () {\n        connect.subscribe((e) => {\n            switch (e.detail.type) {\n                case 'VKWebAppAccessTokenReceived':\n                    this.setState({access_token: e.detail.data.access_token});\n                    this.getUser();\n                    break;\n                default:\n                    console.log(e.detail);\n            }\n        });\n        connect.send(\"VKWebAppGetAuthToken\", {\"app_id\": 6940370, \"scope\": \"friends,status,wall,groups\"});\n    }\n\n    getUser() {\n        Users.getUsers({\n            fields: 'photo_200,city,title',\n            access_token: this.state.access_token\n        })\n            .then(res => this.setState({ fetchedUser : res.data.response[0]}))\n            .catch(e => console.log('ERR GET User', e));\n    }\n\n    go = (e) => {\n        this.setState({activePanel: e.currentTarget.dataset.to});\n    };\n\n    render () {\n        return (\n            <View activePanel={this.state.activePanel}>\n                <Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} access_token={this.state.access_token}/>\n                <VueFriendsForInstagram\n                    id=\"friendsForInstagram\"\n                    go={this.go}\n                    access_token={this.state.access_token}\n                />\n                <VueFriendsIsDeleted\n                    id=\"friendsIsDeleted\"\n                    go={this.go}\n                    access_token={this.state.access_token}\n                />\n                <VueFriendsIsList\n                    id=\"friendsIsList\"\n                    go={this.go}\n                    access_token={this.state.access_token}\n                />\n                <VueFriendsBookmarks\n                    id=\"friendsBookmarks\"\n                    go={this.go}\n                    access_token={this.state.access_token}\n                />\n                <VueFriendsLastActivity\n                    id=\"friendsLastActivity\"\n                    go={this.go}\n                    access_token={this.state.access_token}\n                />\n                <VueFriendsMutual\n                    id=\"friendsMutual\"\n                    go={this.go}\n                    access_token={this.state.access_token}\n                />\n            </View>\n        );\n    }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect-promise';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {})\n    .then(res => console.log('VKWebAppInit', res))\n    .catch(e => console.error('ERR VKWebAppInit', e));\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}